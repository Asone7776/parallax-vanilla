{"version":3,"sources":["../../src/js/parallax-vanilla.js"],"names":["defineParallaxVanilla","pv","stringOfIntegers","test","arg","transform","element","style","webkitTransform","MozTransform","msTransform","OTransform","paraArr","windowProps","scrollTop","window","scrollY","windowHeight","innerHeight","windowMidHeight","updateWindowProps_OnRaf","document","documentElement","updateWindowProps_OnResize","offsetTop","rectTop","el","getBoundingClientRect","top","pageYOffset","init","settingsDefault","container","class","height","block","speed","Math","PI","image","undefined","settings","containers","getElementsByClassName","i","length","obj","offset","pvHeight","getAttribute","suffix","substr","Error","clientHeight","blocks","j","userDefinedSpeed","userDefinedImage","backgroundImage","getComputedStyle","getPropertyValue","scrollDist","paddingBottom","abs","setProperty","push","isInViewport","translate","containerObj","calc","round","onresize","raf","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","updateLoop","console","log"],"mappings":"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","file":"parallax-vanilla.js","sourcesContent":[";(window => {\n  /**\n   * Defines pv\n   * @return {Object} pv object\n   */\n  const defineParallaxVanilla = () => {\n    /**\n  \t * [Library object]\n  \t * @type {Object}\n  \t */\n    let pv = {}\n\n    /**\n  \t * Checks if String argument consists exclusively of numbers\n  \t * @param  {String}  arg String to check\n  \t * @return {Boolean}     True if String consists exclusively of numbers\n  \t */\n    pv.stringOfIntegers = arg => {\n      return /^[0-9]+$/.test(arg)\n    }\n\n    /**\n\t\t * Transform prefixes for CSS\n\t\t * @param  {HTML-element} element A para-block element\n\t\t * @param  {CSS-style} style   E.g. 'transform3d(x, y, z)'\n\t\t */\n    pv.transform = (element, style) => {\n      element.style.webkitTransform = style\n      element.style.MozTransform = style\n      element.style.msTransform = style\n      element.style.OTransform = style\n      element.style.transform = style\n    }\n\n    /**\n\t\t * Primary data handler for containers and blocks.\n\t\t * @type {Array}\n\t\t * @structure\n\t\t * paraArr = [\n\t\t * \tobj : {\n\t\t * \t\tcontainer : {\n\t\t * \t\t\tel : HTML-element,\n\t\t * \t\t\toffset : offsetTop,\n\t\t * \t\t\theight : clientHeight\n\t\t * \t\t},\n\t\t * \t\tblocks : [\n\t\t * \t\t\tblock : {\n\t\t * \t\t\t\tel : HTML-element,\n\t\t * \t\t\t\tspeed : getAttr('speed')\n\t\t * \t\t\t}\n\t\t * \t\t]\n\t\t * \t}\n\t\t * ]\n\t\t */\n    pv.paraArr = []\n\n    /**\n  \t * Window properties\n  \t * @type {Object}\n  \t */\n    pv.windowProps = {\n      scrollTop: window.scrollY,\n      windowHeight: window.innerHeight,\n      windowMidHeight: window.innerHeight / 2,\n    }\n\n    /**\n\t\t * Update selected attributes in windowProps on window raf event\n\t\t */\n    pv.updateWindowProps_OnRaf = () => {\n      pv.windowProps.scrollTop = window.scrollY || document.documentElement.scrollTop\n    }\n\n    /**\n\t\t * Update selected attributes in pv.windowProps on window resize event\n\t\t */\n    pv.updateWindowProps_OnResize = () => {\n      pv.windowProps.scrollTop = window.scrollY || document.documentElement.scrollTop\n      pv.windowProps.windowHeight = window.innerHeight\n      pv.windowProps.windowMidHeight = window.innerHeight / 2\n    }\n\n    /**\n\t\t * Calculates the top offset from an element to the window's || document's top\n\t\t * @param  {HTML-element} el A pv-block element\n\t\t * @return {Int}    The element's top offset to document.\n\t\t * Link: https://plainjs.com/javascript/styles/get-the-position-of-an-element-relative-to-the-document-24/\n\t\t */\n    pv.offsetTop = el => {\n      let rectTop = el.getBoundingClientRect().top,\n        scrollTop = window.pageYOffset || document.documentElement.scrollTop\n      return rectTop + scrollTop\n    }\n\n    /**\n\t\t * Initialize pv.paraArr\n\t\t * @param  {Object} settings User settings\n\t\t */\n    pv.init = settings => {\n      const settingsDefault = {\n        container: {\n          class: 'pv-container',\n          height: '250px',\n        },\n        block: {\n          class: 'pv-block',\n          speed: -Math.PI,\n          image: undefined,\n        },\n      }\n\n      settings = settings || settingsDefault\n      settings.container = settings.container || settingsDefault.container\n      settings.container.class = settings.container.class || settingsDefault.container.class\n      settings.container.height = settings.container.height || settingsDefault.container.height\n      settings.block = settings.block || settingsDefault.block\n      settings.block.class = settings.block.class || settingsDefault.block.class\n      settings.block.speed = settings.block.speed || settingsDefault.block.speed\n      settings.block.image = settings.block.image || settingsDefault.block.image\n\n      const containers = document.getElementsByClassName(settings.container.class)\n\n      // loop containers\n      for (let i = 0; i < containers.length; i++) {\n        let obj = {}\n        let container = {}\n\n        container.el = containers[i]\n        container.offset = pv.offsetTop(container.el)\n\n        let pvHeight = container.el.getAttribute('pv-height')\n        if (pvHeight == null) {\n          container.el.style.height = settings.container.height\n        } else {\n          if (pv.stringOfIntegers(pvHeight)) {\n            // string only consists of integers, add px\n            container.el.style.height = pvHeight + 'px'\n          } else {\n            // string has more than integers, assume suffix is either px or vh\n            let suffix = pvHeight.substr(pvHeight.length - 2, pvHeight.length)\n            if (suffix == 'px' || suffix == 'vh') {\n              container.el.style.height = pvHeight\n            } else {\n              throw new Error('Invalid height')\n            }\n          }\n        }\n\n        container.height = container.el.clientHeight\n\n        obj.container = container\n\n        obj.blocks = []\n        const blocks = containers[i].getElementsByClassName(settings.block.class)\n\n        for (let j = 0; j < blocks.length; j++) {\n          let block = {}\n          block.el = blocks[j]\n\n          const userDefinedSpeed = block.el.getAttribute('pv-speed')\n          if (userDefinedSpeed == null) {\n            block.speed = settings.block.speed\n          } else {\n            if (userDefinedSpeed == 0 || userDefinedSpeed == 0.0) {\n              block.speed = settings.block.speed\n            } else {\n              block.speed = userDefinedSpeed\n            }\n          }\n\n          const userDefinedImage = block.el.getAttribute('pv-image')\n          if (userDefinedImage == null) {\n            if (settings.block.image !== undefined) {\n              block.el.style.backgroundImage = \"url('\" + settings.block.image + \"')\"\n            }\n          } else {\n            block.el.style.backgroundImage = \"url('\" + userDefinedImage + \"')\"\n          }\n\n          const image = window.getComputedStyle(block.el).getPropertyValue('background-image')\n\n          // if the pv-block has a background image\n          if (image != 'none') {\n            // calculates the negative top property\n            // negative scroll distance\n            // plus container height / factor, because whenever we pass the element we'll always scroll the window faster then the animation (if factor < 1 it'll be increased to all is good)\n            let top = 0\n            let scrollDist = 0\n            let paddingBottom = 0\n\n            // if the pv-block offset is less than the windowheight, then the scrolldist will have to be recalculated\n            if (container.offset < pv.windowProps.windowHeight) {\n              scrollDist = (container.height + container.offset) / Math.abs(block.speed)\n\n              if (block.speed > 0) {\n                top = -Math.abs(container.offset)\n                paddingBottom = container.height + container.offset\n              } else {\n                paddingBottom = scrollDist + container.height\n              }\n\n              // the pv-block is below the initial windowheight\n            } else {\n              scrollDist = (container.height + pv.windowProps.windowHeight) / Math.abs(block.speed)\n              paddingBottom = scrollDist + container.height\n\n              if (block.speed > 0) {\n                top = -scrollDist\n                paddingBottom =\n                  container.height + pv.windowProps.windowHeight / Math.abs(block.speed)\n              } else {\n                paddingBottom = scrollDist + container.height\n              }\n            }\n\n            if (Math.abs(top) >= Math.abs(paddingBottom)) paddingBottom = Math.abs(top) + 1\n\n            block.el.style.setProperty('padding-bottom', paddingBottom + 'px', null)\n            block.el.style.setProperty('margin-top', top + 'px', null)\n          }\n\n          obj.blocks.push(block)\n        } // end of for blocks\n\n        pv.paraArr.push(obj)\n      } // loop container\n      // pp(\"pv.paraArr\", pv.paraArr)\n    }\n\n    // checks if the parallax image is in viewport.\n    pv.isInViewport = (offset, height) => {\n      return (\n        pv.windowProps.scrollTop + pv.windowProps.windowHeight - offset > 0 &&\n        pv.windowProps.scrollTop < offset + height\n      )\n    }\n\n    // translates the parallax blocks, creating the effect\n    pv.translate = () => {\n      // loop parallax blocks\n      for (let i = 0; i < pv.paraArr.length; i++) {\n        const containerObj = pv.paraArr[i].container\n        let calc\n\n        // check if parallax block is in viewport\n        if (pv.isInViewport(containerObj.offset, containerObj.height)) {\n          // if any parallax is within the first windowheight, transform from 0 (pv.scrollTop)\n          if (containerObj.offset < pv.windowProps.windowHeight) {\n            calc = pv.windowProps.scrollTop\n\n            // if the parallax is further down on the page\n            // calculate windowheight - parallax offset + scrollTop to start from 0 whereever it appears\n          } else {\n            calc = pv.windowProps.windowHeight - containerObj.offset + pv.windowProps.scrollTop\n          }\n\n          for (let j = 0; j < pv.paraArr[i].blocks.length; j++) {\n            const block = pv.paraArr[i].blocks[j]\n\n            // perform the transform\n            pv.transform(block.el, 'translate3d(0,' + Math.round(calc / block.speed) + 'px, 0)')\n          } // end of for blocks\n        } // end of if\n      } // end of for container\n    } // translate\n\n    // window resize event\n    /**\n\t   * Window on resize event, updates pv.windowProps\n\t   */\n    window.onresize = () => {\n      pv.updateWindowProps_OnResize()\n      pv.init()\n    }\n\n    /**\n\t\t * Request animation frame\n\t\t * Binds function to window\n\t\t */\n    window.raf = (() => {\n      return (\n        window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        function(callback) {\n          window.setTimeout(callback, 1000 / 60) // 60 FPS\n        }\n      )\n    })()\n\n    /**\n\t\t * Main loop for updating variables and performing translates\n\t\t */\n    const updateLoop = () => {\n      pv.updateWindowProps_OnRaf()\n      pv.translate()\n      raf(updateLoop)\n    }\n\n    /**\n\t\t * Initialize main loop\n\t\t */\n    raf(updateLoop)\n\n    /**\n\t\t * Returns the library\n\t\t */\n    return pv\n  } // end of define_pv()\n\n  /**\n   * Define pv to window if not already done\n   */\n  if (typeof pv === 'undefined') {\n    window.pv = defineParallaxVanilla()\n    console.log('%c parallax-vanilla defined.', 'color: green')\n  } else {\n    console.log('%c parallax-vanilla already defined.', 'color: red')\n  }\n})(window)\n"]}